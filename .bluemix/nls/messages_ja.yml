---
#The format for creating a link with a URL and text is [link text](link url) with no spaces or characters between the two sets of brackets- []()
template.name: "デプロイメント戦略を使用したアプリケーションの開発と Kubernetes へのデプロイ"
template.description: "このツールチェーンを使用すると、アプリケーションを開発し、IBM Cloud Kubernetes Service によって管理される kubernetes クラスターにデプロイすることができます。このテンプレートでは、ニーズに対応するために、ローリング、ブルー/グリーン、またはカナリアなどの拡張デプロイメント戦略を選択できます。デフォルトでは、サンプルの Node.js「Hello World」アプリがツールチェーンで使用されますが、代わりに独自のアプリを用意して、それにリンクすることもできます。このツールチェーンは、継続的デリバリーに加えて、[脆弱性アドバイザー](https://cloud.ibm.com/docs/services/va?topic=va-va_index)、[Code Risk Analyzer](https://cloud.ibm.com/docs/ContinuousDelivery?topic=ContinuousDelivery-cd-configure-cra-repos)、ソース管理、Issue のトラッキング、およびオンライン編集用に事前構成されています。[コンソール](https://cloud.ibm.com/kubernetes/clusters)を使用して IBM Cloud コンテナー・クラスターを管理することができます。このツールチェーンは、Continuous Delivery サービスの一部であるツールを使用します。そのサービスのインスタンスが、選択したリソース・グループや組織にまだない場合は、 **「作成」** をクリックすると、無料の[ライト](/catalog/services/continuous-delivery/)・プランが選択されてインスタンスが自動的に追加されます。開始するには、**「作成」** をクリックします。ステップバイステップの説明については、[チュートリアル](https://github.com/open-toolchain/sdk/wiki/Develop-and-deploy-an-application-on-Kubernetes-using-deployment-strategies)を参照してください。"
template.gettingStarted: " **ご使用のツールチェーンは作動可能です!**\n**クイック・スタート:** Git リポジトリーに対する変更をコミットして、新しい Docker イメージ・ビルドを起動してください。このビルドは脆弱性についてスキャンされ、Kubernetes クラスターにデプロイされます。 ステップバイステップの説明については、このツールチェーンの [チュートリアル](https://github.com/open-toolchain/sdk/wiki/Develop-and-deploy-an-application-on-Kubernetes-using-deployment-strategies) をご覧ください。"
deploy.longDescription: "デプロイするアプリの名前を入力します。 新しい IBM Cloud API キーを作成するか、既存の IBM Cloud API キーを使用して、ビルドされたアプリケーション Docker イメージを保管する IBM Container Registry 構成と、ビルドされたイメージをデプロイする IBM Kubernetes Cluster 構成を取得します。\n\n**注**: クラスター名前空間が存在しない場合は、自動的に作成され、構成されます。"
deploy.appDescription: "デプロイするアプリの名前を入力します。"
deploy.blueGreen.longDescription: "**ブルーグリーン戦略** は常に 1 つの受信トラフィックのみを持つ 2 つの永続的な実稼働環境 (ブルーとグリーン) を活用します。 新しいリリースをアイドル環境にデプロイしてから、すべてのトラフィックをダウンタイムなしでそれに切り替えます。 高速ロールバックの場合は、すべてのトラフィックを変更されていない他の環境にすべて切り替えるだけです。\n\nデプロイするアプリの名前を入力します。 新しい IBM Cloud API キーを作成するか、既存の IBM Cloud API キーを使用して、ビルドされたアプリケーション Docker イメージを保管する IBM Container Registry 構成と、ビルドされたイメージをデプロイする IBM Kubernetes Cluster 構成を取得します。"
deploy.rolling.longDescription: "**ローリング戦略** は、すべてのインスタンスを迅速に増分更新することによって、ダウンタイムなしで新しいリリースを導入します。 ロールバックは直前のリリースを再デプロイする必要があり、これは迅速に行えません。\n\nデプロイするアプリの名前を入力します。 新しい IBM Cloud API キーを作成するか、既存の IBM Cloud API キーを使用して、ビルドされたアプリケーション Docker イメージを保管する IBM Container Registry 構成と、ビルドされたイメージをデプロイする IBM Kubernetes Cluster 構成を取得します。"
deploy.canary.longDescription: "**カナリア戦略** は、元の実稼働環境と並行してダウンタイムなしで新しいリリースを導入し、その後、破棄される元の実稼働環境に置き換えられるまで、より多くのトラフィックを段階的にルーティングします。 段階的なロールアウト時の高速ロールバックの場合は、すべてのトラフィックを元の実稼働環境に戻すことができます。\n\nデプロイするアプリの名前を入力します。 新しい IBM Cloud API キーを作成するか、既存の IBM Cloud API キーを使用して、ビルドされたアプリケーション Docker イメージを保管する IBM Container Registry 構成と、ビルドされたイメージをデプロイする IBM Kubernetes Cluster 構成を取得します。"
deploy.appName: "アプリ名"
deploy.apikeyDescription: "IBM Cloud API キーは、IBM Cloud Kubernetes Service API へのアクセス、およびクラスターとの対話に使用されます。 [IBM Cloud コンソール](https://cloud.ibm.com/iam/apikeys) または ibmcloud [iam api-key-create](https://cloud.ibm.com/docs/cli?topic=cli-ibmcloud_commands_iam#ibmcloud_iam_api_key_create) コマンドを使用して、API を作成できます。 "
deploy.registryRegionDescription: "イメージ・レジストリーのための IBM Cloud リージョン"
deploy.registrynsDescription: "コンテナー・イメージ・レジストリー内の名前空間。 {bx cr namespace-add] でセットアップできます。 詳しくは、https://cloud.ibm.com/docs/services/Registry?topic=registry-getting-started#getting-started を参照してください。"
deploy.regionDescription: "デプロイの対象の k8s マシンをホストする IBM Cloud リージョン。"
deploy.rgDescription: "デプロイの対象の k8s マシンをホストする IBM Cloud リソース・グループ。"
deploy.clusterNameDescription: "k8s クラスターの名前。 [ibmcloud cs clusters] コマンドを使用して、またはコンソール (https://cloud.ibm.com/kubernetes/clusters) で取得します。"
deploy.namespaceDescription: "Kubernetes 名前空間"
deploy.apikey: "IBM Cloud API キー"
deploy.containerregRegion: "コンテナー・レジストリーのリージョン"
deploy.containerregns: "コンテナー・レジストリーの名前空間"
deploy.imgregRegion: "コンテナー・イメージ・レジストリー・リージョン"
deploy.imgregNs: "コンテナー・イメージ・レジストリー名前空間"
deploy.cluster: "クラスター名"
deploy.rg: "リソース・グループ"
deploy.clusterNs: "クラスター名前空間"
deploy.clusterDetails: "**クラスターの詳細**\nアプリケーションのデプロイ先として計画している IBM Cloud Kubernetes Service クラスターおよび名前空間を選択します。 名前空間がまだ存在していない場合は、アプリケーションのデプロイメント中に、CD パイプラインによって新しい名前空間が作成されます。 [詳細情報]()\n"
deploy.containerRegistryDetails: "**Container Registry**\n\nIBM Container Registry は、CI パイプラインで作成された Docker コンテナー・イメージを保管します。 ビルドされたアプリケーション Docker イメージをプッシュする予定のターゲット・コンテナー・レジストリーのリージョンおよび名前空間を選択します。 [詳細情報]()\n"
deploy.canary: "**カナリアの詳細**\nカナリア・ロールアウトは、仮想サーバー・インスタンス上にデプロイされたアプリケーションの新規バージョンに、徐々にユーザー要求を転送します。 トラフィック増分サイズと、増分ごとの間隔を選択します。 [詳細情報]()\n"
deploy.canaryStepSize: "カナリア・デプロイメントにリダイレクトされるトラフィック増分 (% 単位) を定義します。"
deploy.canaryStepInterval: "各カナリア増分間の間隔時間 (秒) を定義します。"
deploy.canaryStepSizeTitle: "カナリア・ステップ・サイズ (トラフィック増分の %)"
deploy.canaryStepIntervalTitle: "カナリア・ステップ間隔 (秒)"
deploy.clusterDescription: ""
deploy.clusternsDescription: ""
region: "クラスターのリージョン"
organization: "組織"
space: "スペース"
prodStage: "実稼働環境"
headerSVG.think: "思考"
headerSVG.code: "コード"
headerSVG.deliver: "配信"
headerSVG.run: "実行"
headerSVG.issueTracker: "課題トラッカー"
headerSVG.gitlab1: "GitLab"
headerSVG.repository: "リポジトリー"
headerSVG.gitlab2: "GitLab"
headerSVG.pipeline: "PIPELINE"
headerSVG.ibmCloud: "IBM Cloud"
headerSVG.bluemix: "BLUEMIX"
headerSVG.webIde: "WEB IDE"
headerSVG.kubernetes: "Kubernetes"
headerSVG.cluster: "クラスター"
headerSVG.github1: "GitHub"
headerSVG.github2: "GitHub"
headerSVG.gitlab3: "GitLab"
headerSVG.gitlab4: "GitLab"
headerSVG.bitbucket1: "Bitbucket"
headerSVG.bitbucket2: "Bitbucket"
headerSVG.ciPipeline: "CI パイプライン"
headerSVG.cdPipeline: "CD パイプライン"
headerSVG.inventory: "インベントリー"
headerSVG.repo1: "リポジトリー"
headerSVG.repo2: "リポジトリー"
headerSVG.issue: "問題 "
headerSVG.tracker: "トラッカー"
headerSVG.prPipeline: "PR パイプライン"
headerSVG.codeRisk: "コード・リスク"
headerSVG.analyzer: "アナライザー"
headerSVG.devops: "DevOps"
headerSVG.insights: "洞察"
headerSVG.secrets: "秘密"
headerSVG.manager: "マネージャー"
headerSVG.keyProtect: "Key Protect"
wizard.welcome.description: "このツールチェーンを使用して、安全にアプリケーションを開発し、IBM Cloud Kubernetes Service によって管理される Kubernetes クラスターにデプロイすることができます。 デフォルトでは、サンプルの Node.js「Hello World」アプリがツールチェーンで使用されますが、代わりに独自のアプリを用意して、それにリンクすることもできます。"
wizard.sourceHost: "ソース・プロバイダー"
wizard.step.deployment_strategy.title: "デプロイメント戦略"
wizard.step.application.title: "アプリケーション"
wizard.step.inventory.title: "インベントリー"
wizard.step.inventory.label: "インベントリー"
wizard.step.vault.title: "シークレット"
wizard.step.keyprotect.title: "Key Protect"
wizard.step.secretsmanager.title: "Secrets Manager"
wizard.step.hashicorpvault.title: "HashiCorp Vault"
wizard.step.deploy.label: "デプロイメント・ターゲット"
wizard.step.deploy.title: "デプロイメント・ターゲット"
wizard.step.optionaltools.title: "オプション・ツール"
wizard.step.summary.title: "要約"
wizard.app.title: "アプリケーション・リポジトリー"
wizard.app.longDescription: "アプリケーション・リポジトリーは、CI パイプラインが作成し、テストし、ターゲット成果物レジストリーに配信する、プロジェクトまたはサービスのソース・コードです。\n作業を始めるにあたって役立つように、ツールチェーンには、[サンプルの NodeJS アプリ](https://us-south.git.cloud.ibm.com/open-toolchain/hello-containers) が用意されています。 サンプル NodeJS アプリの代わりに既存のアプリケーションを使用する場合は、拡張セクションをクリックしてください。\nデフォルトでは、アプリケーション・リポジトリー・テンプレートがユーザーの Git Repo and Issue Tracking の組織に複製されます。 組織を変更するには、**詳細オプション** を有効にし、**リポジトリー所有者** フィールドを編集してください。"
wizard.app.clone: "デフォルト・サンプル・アプリケーションの使用"
wizard.app.link: "所有アプリケーションを持ち込む"
wizard.repo.invalidOptionMsg: "サポートされない構成オプションを選択しました。 **詳細オプション** を有効にしてください。"
wizard.inventory.title: "インベントリー・リポジトリー"
wizard.inventory.longDescription: "インベントリー・リポジトリーは、CI パイプラインによって構築された成果物の詳細を記録します。\n新規インベントリー・リポジトリー ([インベントリー・リポジトリー・テンプレート](https://us-south.git.cloud.ibm.com/open-toolchain/inventory) のクローン) を作成するか、ツールチェーン間で共有している既存のインベントリー・リポジトリーを使用するかを選択できます。\nデフォルトでは、インベントリー・リポジトリー・テンプレートがユーザーの Git Repo and Issue Tracking の組織に複製されます。 組織を変更するには、**詳細オプション** を有効にし、**リポジトリー所有者** フィールドを編集してください。"
wizard.inventory.info: "インベントリーについて詳しくは、[ドキュメント]() を参照してください。"
wizard.inventory.clone: "新規インベントリー・リポジトリーの作成"
wizard.inventory.link: "既存のインベントリー・リポジトリーを使用"
wizard.vault.title: "シークレットの管理"
wizard.vault.longDescription: "このツールチェーンにおける一部のツールは、特権リソースにアクセスするためにシークレットを必要とします。 そのようなシークレットの例として、IBM Cloud API キーがあります。 シークレットはすべて、Secret Vault に安全に保管されている必要があり、いつでも必要に応じてツールチェーンによって参照されます。"
wizard.vault.keyProtect.title: "Key Protect"
wizard.vault.keyProtect.description: "Key Protect はクラウド・ベースのセキュリティー・サービスであり、IBM クラウド・サービスまたはお客様がビルドしたアプリケーションで使用される暗号鍵のライフサイクル管理を行います。"
wizard.vault.secretsManager.title: "Secrets Manager"
wizard.vault.secretsManager.description: "Secrets Manager を使用すると、IBM Cloud サービスまたはカスタムビルドのアプリケーションで使用するシークレットを作成、リース、および一元管理できます。"
wizard.vault.hashicorp.title: "HashiCorp Vault"
wizard.vault.notification.title: "シークレットキーストア"
wizard.vault.notification.sutitle: "ベスト・プラクティスとしては、以下のいずれかのツールにシークレットを保管します。"
wizard.vault.hashicorp.description: "HashiCorp Vault は、プログラマチック・アクセスを介して人間とマシンの両方のためにシステムへのアクセスを取りまとめる、シークレット管理ソリューションです。"
wizard.vault.info: "シークレットが入っているシークレットプロバイダーを識別してください。"
wizard.deploymentStrategy.title: "デプロイする"
wizard.deploymentStrategy.longDescription: "ツールチェーンは、継続的デプロイパイプラインを作成して、アプリケーションDockerイメージをIBM Kubernetes サービスのクラスターまたはIBM Cloud Satelliteのクラスターグループにデプロイします。次の展開戦略のいずれかから選択します。"
wizard.deploymentStrategy.text: "ご使用のアプリケーションに適したデプロイメント戦略を選択してください"
wizard.deploymentStrategy.rolling.title: "**ローリング**\n\nすべてのインスタンスを順次に更新することによって、ダウンタイムなく新しいリリースをデプロイします。"
wizard.deploymentStrategy.blueGreen.title: "**ブルーグリーン**\n\n新しいリリースを、現行の実稼働環境と同一の分離された環境にデプロイし、迅速なロールバックと容易なテストを可能にします。"
wizard.deploymentStrategy.canary.title: "**カナリア**\n\n新しいリリースを徐々に実稼働環境に導入することで、古いバージョンのアプリケーションを段階的に新しいバージョンに置き換えて、リスクを軽減することができます。"
wizard.deploymentStrategy.satellite.title: "**Satellite Config を介した複数のクラスター**\n\nSatellite Config を使用して、新規リリースをクラスター・グループ内の複数のクラスターに同時にデプロイします。Satellite Config を使用してデプロイするには、[「クラスター・グループの作成」](https://github.com/open-toolchain/sdk/wiki/Develop-and-deploy-an-application-using-IBM-Cloud-Satellite) を行ってください "
wizard.step.deploymentStrategy.title: "デプロイする"
wizard.optional.tools.title: "その他のツール"
wizard.optional.tools.longDescription: "これらは、ツールチェーンに組み込むことができるオプション・ツールです。"
wizard.optional.tools.webide.title: "Orion WebIDE (構成の必要なし)"
wizard.optional.tools.webide.description: "このブラウザー・ベースの統合開発環境 (IDE) で Web およびクラウド用の開発を行います。"
wizard.optional.tools.doi.title: "DevOps Insights (構成の必要なし)"
wizard.optional.tools.doi.description: "DevOps Insights は、一般的な継続的統合および継続的デリバリー・ツールから獲得する包括的な洞察を提供し、アプリケーション・デリバリーの速度と制御を向上させます。"
wizard.summary.title: "要約"
wizard.summary.success.title: "完了しました"
wizard.summary.success.subtitle: "ツールチェーンの構成を完了しました。 選択したツールおよび設定でツールチェーンを作成するには、下の「作成」ボタンをクリックしてください。"
wizard.deploymentTarget.kubernetes.title: "**Kubernetes**\n\nアプリケーションを  IKS または IBM Cloud 上の OpenShift クラスターにデプロイ"
wizard.deploymentTarget.satellite.title: "**Satellite**\n\nアプリケーションを Satellite クラスター・グループとして管理されている IKS または OpenShift クラスターにデプロイ"
deploy.satelliteClusterGroup: "Satellite クラスター・グループ名"
deploy.satelliteClusterGroupNamespace: "Satellite クラスター・グループ名前空間"
deploy.deploymentTarget: "選択したデプロイメント・ターゲットから選びます。  デプロイメント・ターゲット・タイプに Kubernetes を使用する場合、クラスター・リージョンとリソース・グループの選択に基づいてクラスター名を取得します。 Satellite の場合は、クラスター・グループの名前を選択します。\n\n**注 **: クラスター名前空間が存在しない場合は、自動的に作成され、構成されます。"
deploy.notification.title: "Satellite へのデプロイ"
deploy.notification.text: "ローリング戦略では、IBM Cloud Satellite 内で管理されるクラスターのグループに、アプリケーションをデプロイするための追加オプションを提供します。 IBM Cloud Satellite 内で構成されているクラスターのグループにアプリケーションをデプロイするには、「クラスター・グループの作成」(https://cloud.ibm.com/satellite/locations/create) の指示に従ってください。"
deploy.deploymentTarget.kubernetes.info: "アプリケーションをデプロイする、クラスター・リージョンとリソース・グループの選択に基づいてクラスター名を選択します。\n\n**注 **: クラスター名前空間は、選択されたクラスター内に存在しない場合、パイプラインによって作成されます。"
deploy.deploymentTarget.satellite.info: "アプリケーションをデプロイするクラスター・グループ名を選択します。\n\n**注 **: クラスター名前空間は、クラスター・グループ内のクラスター内に存在しない場合、パイプラインによってクラスター内に自動的に作成されます。"
...